""" Organization Images: front, room, other """
type OrgImage {
  id:         String!
  url:        String!
  remark:     String
  # frontOrgId String?
  # roomOrgId String?
  # otherOrgId String?
}

""" Organization """
type Organization {
  createTime: DateTime!
  updateTime: DateTime!
  id:         String!
  businessLicense: String!
  identityCardFrontImg: String!
  identityCardBackImg: String!
  logo:      String!
  tags:       String
  description: String
  name:       String
  address:     String
  longitude:    String
  latitude:   String
  tel: String
  frontImages:[OrgImage!] 
  roomImages:[OrgImage!] 
  otherImages:[OrgImage!] 
}


input pageOrganizationInput {
  name: String
  pageInput: pageInput!
}

input OrgImageInput {
  url:        String!
  remark:     String
}

input MutationOrganizationInput {
  name:       String!
  businessLicense: String!
  identityCardFrontImg: String!
  identityCardBackImg: String!
  logo:      String!
  tags:       String
  description: String
  address:     String
  longitude:    String
  latitude: String
  tel: String
  frontImages:[OrgImageInput!]
  roomImages:[OrgImageInput!]
  otherImages:[OrgImageInput!]
}

type pageOrganization {
  organization: [Student]
  pageInfo: pageInfo
}

type Query {
  organizations(input: pageOrganizationInput): pageOrganization
  getOrganization(id: String!): Organization
}

type Mutation {
  createOrganization(input: MutationOrganizationInput!): Organization
  updateOrganization(id: String!, input: MutationOrganizationInput!): Organization
  removeOrganization(id: String!): Boolean
}