// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
  name       String
  password   String
  tel        String  @unique
  account    String?
  avatar     String?
  code       String?
  desc       String?
  codeCreateTime DateTime?
}

model Student {
  id         String   @id @default(uuid())
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
  name       String
  password   String
  tel        String  @unique
  account    String?
  avatar     String?
  code       String?
  desc       String?
  codeCreateTime DateTime?
}

model Organization {
  id         String   @id @default(uuid())
  tel String  @unique
  name       String
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
  businessLicense String
  identityCardFrontImg String
  identityCardBackImg String
  logo      String
  address     String
  // 以逗号分割 
  tags       String? @db.Text
  description String? @db.Text
  longitude    String?
  latitude   String?
  deletedAt DateTime? @map("deleted_at")
  frontImages OrgImage[] @relation("frontImages")
  roomImages OrgImage[] @relation("roomImages")
  otherImages OrgImage[] @relation("otherImages")
  courses Course[]
  cards Card[]
  products Product[]

  //索引
  @@index([deletedAt])
}

model OrgImage {
  id         String   @id @default(uuid())
  url        String
  remark     String?
  frontOrgId String?
  frontOrg Organization? @relation("frontImages",fields: [frontOrgId], references: [id])
  roomOrgId String?
  roomOrg Organization? @relation("roomImages",fields: [roomOrgId], references: [id])
  otherOrgId String?
  otherOrg Organization? @relation("otherImages",fields: [otherOrgId], references: [id])
}

model Course {
  id         String   @id @default(uuid())
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
  createdBy  String
  updatedBy  String?
  deletedAt DateTime? @map("deleted_at")
  name       String
  // 适龄人群
  group      String
  // 适合基础
  baseAbility       String
  // 限制人数
  limitNumber Int
  // 持续时长
  duration    Int
  // 描述
  desc       String?
  // 预约信息
  reserveInfo String?
  // 退款信息
  refundInfo String?
  // 其他信息
  otherInfo String?
  // 可约时间
  reducibleTime Json?
  // 组织id
  orgId String 
  org Organization? @relation(fields: [orgId], references: [id])
  // 卡id
  cards Card[]

  //索引
  @@index([deletedAt])
}

enum CardType {
  // 次卡
  TIME
  // 时长卡
  DURATION
}

model Card {
  id         String   @id @default(uuid())
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
  createdBy  String
  updatedBy  String?
  deletedAt DateTime? @map("deleted_at")
  // 名称
  name       String
  // 卡类型
  type       CardType @default(TIME)
  // 上课次数
  times      Int? @default(0)
  // 卡时长
  duration   Int? @default(0)
  // 课程id
  courseId String
  course Course? @relation(fields: [courseId], references: [id])
  // 组织id
  orgId String
  org Organization? @relation(fields: [orgId], references: [id])
  // 商品
  products Product[]

  //索引
  @@index([deletedAt])
}

enum ProductStatus {
  UN_LIST
  LIST
}

model Product {
  id         String   @id @default(uuid())
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
  createdBy  String
  updatedBy  String?
  deletedAt  DateTime? @map("deleted_at")

  name       String
  desc       String?
  type       String?
  status     ProductStatus @default(UN_LIST)
  stock      Int @default(0)
  curStock   Int @default(0)
  buyNumber  Int @default(0)
  limitBuyNumber  Int @default(-1)
  coverUrl    String
  bannerUrl    String
  originalPrice    Float
  preferentialPrice    Float
  orgId String
  org Organization? @relation(fields: [orgId], references: [id])
  cards Card[]

  // 索引
  @@index([deletedAt])
}